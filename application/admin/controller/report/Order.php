<?php

namespace app\admin\controller\report;

use app\common\controller\Backend;
use app\common\model\Litestoreorder;
use fast\Date;

class Order extends Backend
{
    protected $noNeedLogin = ['getData'];

    /** @var Litestoreorder */
    public $model = null;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->model = model('Litestoreorder');
    }

    public function index()
    {
        $this->assign('cuDate', date('Y-m-d'));
        return $this->fetch();
    }

    public function getData()
    {
        $mode = $this->request->param('mode');
        $row = $this->request->param('row', 7);
        $startTime = strtotime($this->request->param('start', 0));
        $endTime = strtotime($this->request->param('end', 0));
        $endTime && $endTime += Date::DAY - 1;

        switch ($mode) {
            case 'month'://月视图
                $formatter = '%Y-%m';
                $timeUnit = Date::MONTH;
                $timeFormatter = 'Y-m';
                break;
            case 'year'://年视图
                $formatter = '%Y';
                $timeUnit = Date::YEAR;
                $timeFormatter = 'Y';
                break;
            case 'day'://日视图
            default:
                $formatter = '%Y-%m-%d';
                $timeUnit = Date::DAY;
                $timeFormatter = 'Y-m-d';
                break;
        }

        $field = "FROM_UNIXTIME(createtime,'$formatter') as time,count(*) as 'order'";
        $row != 0 && $this->model->page(1, $row);
        $startTime && $endTime && $this->model->where(['createtime' => ['between', [$startTime, $endTime]]]);
        $orderList = $this->model->field($field)->order('time', 'desc')->group('time')->select();

        $field = "FROM_UNIXTIME(createtime,'$formatter') as time,count(*) as pay_order";
        $row != 0 && $this->model->page(1, $row);
        $startTime && $endTime && $this->model->where(['createtime' => ['between', [$startTime, $endTime]]]);
        $payOrderList = $this->model->field($field)->where(['pay_time' => ['neq', 0], 'refund_status' => 40])->order('time', 'desc')->group('time')->select();

        $refundOrder = model('admin/Litestoreorderrefund');
        $field = "FROM_UNIXTIME(create_time,'$formatter') as time,count(*) as refund_order";
        $row != 0 && $refundOrder->page(1, $row);
        $startTime && $endTime && $refundOrder->where(['create_time' => ['between', [$startTime, $endTime]]]);
        $refundOrderList = $refundOrder->where('order_id', 'neq', 'null')->field($field)->order('time', 'desc')->group('time')->select();

        $orderList = collection($orderList)->toArray();
        $payOrderList = collection($payOrderList)->toArray();
        $refundOrderList = collection($refundOrderList)->toArray();

        $row = max(count($orderList), count($payOrderList), count($refundOrderList));

        $order = array_combine(array_column($orderList, 'time'), array_column($orderList, 'order'));
        $payOrder = array_combine(array_column($payOrderList, 'time'), array_column($payOrderList, 'pay_order'));
        $refundOrder = array_combine(array_column($refundOrderList, 'time'), array_column($refundOrderList, 'refund_order'));

        $data = [];
        $time = $endTime ? $endTime : time();
        while ($row > 0) {
            $date = date($timeFormatter, $time - ($row - 1) * $timeUnit);
            $data['time'][] = $date;
            $data['order'][] = $order[$date] ? $order[$date] : 0;
            $data['payOrder'][] = $payOrder[$date] ? $payOrder[$date] : 0;
            $data['refundOrder'][] = $refundOrder[$date] ? $refundOrder[$date] : 0;
            $row--;
        }
        $this->success('ok', '', $data);
    }
}